// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Nofy.Core;
using Nofy.EntityFrameworkCore.DataAccess;
using System;

namespace Nofy.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(NotificationsDbContext))]
    [Migration("20171102091823_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ntf")
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Nofy.Core.Model.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Archived")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Archived")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ArchivedOn")
                        .HasColumnName("ArchivedOn");

                    b.Property<int?>("Category")
                        .HasColumnName("Category");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("CreatedOn");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasMaxLength(1000);

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasColumnName("EntityId")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EntityType")
                        .HasColumnName("EntityType")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("RecipientId")
                        .HasColumnName("RecipientId")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RecipientType")
                        .HasColumnName("RecipientType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Status")
                        .HasColumnName("Status");

                    b.Property<string>("Summary")
                        .HasColumnName("Summary")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Notification","ntf");
                });

            modelBuilder.Entity("Nofy.Core.Model.NotificationAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionLink")
                        .HasColumnName("ActionLink")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("Label")
                        .HasColumnName("Label")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<int>("NotificationId")
                        .HasColumnName("NotificationId");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.ToTable("NotificationAction","ntf");
                });

            modelBuilder.Entity("Nofy.Core.Model.NotificationAction", b =>
                {
                    b.HasOne("Nofy.Core.Model.Notification")
                        .WithMany("Actions")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
